# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCheckWeather():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_checkWeather(self):
    # Test name: Check Weather
    # Step # | name | target | value
    # 1 | open | /pages/city_weather_main_mausam.php | 
    self.driver.get("https://internal.imd.gov.in/pages/city_weather_main_mausam.php")
    # 2 | setWindowSize | 845x864 | 
    self.driver.set_window_size(845, 864)
    # 3 | click | name=id | 
    self.driver.find_element(By.NAME, "id").click()
    # 4 | type | name=id | 42793rourkela
    self.driver.find_element(By.NAME, "id").send_keys("42793rourkela")
    # 5 | click | css=input:nth-child(3) | 
    self.vars["window_handles"] = self.driver.window_handles
    # 6 | storeWindowHandle | root | 
    self.driver.find_element(By.CSS_SELECTOR, "input:nth-child(3)").click()
    # 7 | selectWindow | handle=${win2622} | 
    self.vars["win2622"] = self.wait_for_window(2000)
    # 8 | assertText | xpath=//font[@color="blue"] | Rourkela
    self.vars["root"] = self.driver.current_window_handle
    # 9 | close |  | 
    self.driver.switch_to.window(self.vars["win2622"])
    # 10 | selectWindow | handle=${root} | 
    assert self.driver.find_element(By.XPATH, "//font[@color=\"blue\"]").text == "Rourkela"
    # 11 | close |  | 
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.close()
  
