# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestNavigateLinks():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_navigateLinks(self):
    # Test name: Navigate Links
    # Step # | name | target | value
    # 1 | open | https://en.wikipedia.org/wiki/Main_Page | 
    self.driver.get("https://en.wikipedia.org/wiki/Main_Page")
    # 2 | times | 5 | 
    for i in range(0, 5):
      # 3 | storeXpathCount | xpath=(//a)[contains(@href, "en")] | linkCount
      self.vars["linkCount"] = len(self.driver.find_elements(By.XPATH, "(//a)[contains(@href, \"en\")]"))
      # 4 | echo | ${linkCount} | 
      print("{}".format(self.vars["linkCount"]))
      # 5 | executeScript | return Math.floor(Math.random() * ${linkCount}) | randomNumber
      self.vars["randomNumber"] = self.driver.execute_script("return Math.floor(Math.random() * arguments[0])", self.vars["linkCount"])
      # 6 | echo | ${randomNumber} | 
      print("{}".format(self.vars["randomNumber"]))
      # 7 | storeText | xpath=(//a[contains(@href, "en")])[${randomNumber}] | linkText
      self.vars["linkText"] = self.driver.find_element(By.XPATH, "(//a[contains(@href, \"en\")])[self.vars["randomNumber"]]").text
      # 8 | echo | ${linkText} | 
      print("{}".format(self.vars["linkText"]))
      # 9 | click | xpath=(//a[contains(@href, "en")])[${randomNumber}] | 
      self.driver.find_element(By.XPATH, "(//a[contains(@href, \"en\")])[self.vars["randomNumber"]]").click()
      # 10 | end |  | 
    # 11 | close |  | 
    self.driver.close()
  
