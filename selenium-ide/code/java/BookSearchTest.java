// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class BookSearchTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  public String waitForWindow(int timeout) {
    try {
      Thread.sleep(timeout);
    } catch (InterruptedException e) {
      e.printStackTrace();
    }
    Set<String> whNow = driver.getWindowHandles();
    Set<String> whThen = (Set<String>) vars.get("window_handles");
    if (whNow.size() > whThen.size()) {
      whNow.removeAll(whThen);
    }
    return whNow.iterator().next();
  }
  @Test
  public void bookSearch() {
    // Test name: Book Search
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://library.nitrkl.ac.in/");
    // 2 | setWindowSize | 1552x880 | 
    driver.manage().window().setSize(new Dimension(1552, 880));
    // 3 | click | id=masthead_search | 
    driver.findElement(By.id("masthead_search")).click();
    // 4 | runScript | window.scrollTo(0,0) | 
    js.executeScript("window.scrollTo(0,0)");
    // 5 | select | id=masthead_search | label=ISBN
    {
      WebElement dropdown = driver.findElement(By.id("masthead_search"));
      dropdown.findElement(By.xpath("//option[. = 'ISBN']")).click();
    }
    // 6 | click | id=transl1 | 
    driver.findElement(By.id("transl1")).click();
    // 7 | type | id=transl1 | 9789388028028
    driver.findElement(By.id("transl1")).sendKeys("9789388028028");
    // 8 | click | id=searchsubmit | 
    vars.put("window_handles", driver.getWindowHandles());
    // 9 | storeWindowHandle | root | 
    driver.findElement(By.id("searchsubmit")).click();
    // 10 | selectWindow | handle=${win7176} | 
    vars.put("win7176", waitForWindow(2000));
    // 11 | assertText | xpath=//span[@property="author"]/span | R Mall
    vars.put("root", driver.getWindowHandle());
    // 12 | close |  | 
    driver.switchTo().window(vars.get("win7176").toString());
    assertThat(driver.findElement(By.xpath("//span[@property=\"author\"]/span")).getText(), is("R Mall"));
    driver.close();
  }
}
