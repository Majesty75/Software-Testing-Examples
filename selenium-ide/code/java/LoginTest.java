// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class LoginTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void login() {
    // Test name: Login
    // Step # | name | target | value
    // 1 | open | /PortalMain | 
    driver.get("https://login.nitrkl.ac.in/PortalMain");
    // 2 | storeXpathCount | //a[@id="UserCheck_Login_Button"] | loginButtonCount
    vars.put("loginButtonCount", driver.findElements(By.xpath("//a[@id=\"UserCheck_Login_Button\"]")).size());
    // 3 | echo | login button count ${loginButtonCount} | 
    System.out.println("login button count vars.get("loginButtonCount").toString()");
    // 4 | if | ${loginButtonCount}>0 | 
    if ((Boolean) js.executeScript("return (arguments[0]>0)", vars.get("loginButtonCount"))) {
      // 5 | type | id=LoginUserPassword_auth_username | username
      driver.findElement(By.id("LoginUserPassword_auth_username")).sendKeys("username");
      // 6 | type | id=LoginUserPassword_auth_password | password
      driver.findElement(By.id("LoginUserPassword_auth_password")).sendKeys("password");
      // 7 | click | id=UserCheck_Login_Button_span | 
      driver.findElement(By.id("UserCheck_Login_Button_span")).click();
      // 8 | else |  | 
    } else {
      // 9 | assertElementPresent | id=UserCheck_Logoff_Button_span | 
      {
        List<WebElement> elements = driver.findElements(By.id("UserCheck_Logoff_Button_span"));
        assert(elements.size() > 0);
      }
      // 10 | end |  | 
    }
    // 11 | close |  | 
    driver.close();
  }
}
